namespace Skyblivion.ESReader.TES4
{
    public static class TES4CollectionFactory
    {
        public static TES4Collection Create(string dataFileDirectory, string dataFile)
        {
            //NOTE - SCRI record load scheme is a copypasta, as in, i didnt check which records do actually might have SCRI
            //Doesnt really matter for other purposes than cleaniness
            TES4FileLoadScheme fileScheme = new TES4FileLoadScheme();
            TES4GrupLoadScheme grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.GMST, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.GMST, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.GLOB, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.GLOB, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CLAS, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CLAS, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.FACT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.FACT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.HAIR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.HAIR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.EYES, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.EYES, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.RACE, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.RACE, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SOUN, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SOUN, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SKIL, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SKIL, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.MGEF, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.MGEF, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SCPT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI", "SCHR" }));
            fileScheme.Add(TES4RecordType.SCPT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LTEX, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LTEX, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.ENCH, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.ENCH, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SPEL, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SPEL, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.BSGN, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.BSGN, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.ACTI, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.ACTI, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.APPA, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.APPA, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.ARMO, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.ARMO, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.BOOK, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.BOOK, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CLOT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CLOT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CONT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CONT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.DOOR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.DOOR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.INGR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.INGR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LIGH, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LIGH, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.MISC, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.MISC, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.STAT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.STAT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.GRAS, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.GRAS, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.TREE, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.TREE, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.FLOR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.FLOR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.FURN, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.FURN, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.WEAP, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.WEAP, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.AMMO, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.AMMO, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.NPC_, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.NPC_, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CREA, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CREA, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LVLC, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LVLC, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SLGM, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SLGM, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.KEYM, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.KEYM, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.ALCH, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.ALCH, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SBSP, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SBSP, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.SGST, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.SGST, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LVLI, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LVLI, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.WTHR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.WTHR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CLMT, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CLMT, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.REGN, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.REGN, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CELL, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI", "FULL" }));//WTM:  Change:  Added "Full" for use from GetInCellFactory.cs.
            grupScheme.Add(TES4RecordType.REFR, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            grupScheme.Add(TES4RecordType.ACHR, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            grupScheme.Add(TES4RecordType.ACRE, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            fileScheme.Add(TES4RecordType.CELL, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.WRLD, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            grupScheme.Add(TES4RecordType.CELL, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            grupScheme.Add(TES4RecordType.REFR, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            grupScheme.Add(TES4RecordType.ACHR, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            grupScheme.Add(TES4RecordType.ACRE, new TES4RecordLoadScheme(new string[] { "EDID", "NAME" }));
            fileScheme.Add(TES4RecordType.WRLD, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.DIAL, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.DIAL, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.QUST, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.QUST, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.IDLE, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.IDLE, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.PACK, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.PACK, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.CSTY, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.CSTY, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LSCR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LSCR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.LVSP, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.LVSP, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.ANIO, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.ANIO, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.WATR, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.WATR, grupScheme);
            grupScheme = new TES4GrupLoadScheme();
            grupScheme.Add(TES4RecordType.EFSH, new TES4RecordLoadScheme(new string[] { "EDID", "SCRI" }));
            fileScheme.Add(TES4RecordType.EFSH, grupScheme);
            TES4Collection collection = new TES4Collection(dataFileDirectory);
            collection.Add(dataFile);
            collection.Load(fileScheme);
            return collection;
        }
    }
}
